{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Certificate Document Version 1.2 Schema",
  "id": "http://www.blockcerts.org/schema/1.2/certificate-document-1.2.json",
  "description": "The complete certificate document, including the assertion, certificate, and issuer. Doesn't include the blockchain receipt. This part is hashed and placed on the blockchain",
  "type": "object",
  "definitions": {
    "JsonLdType": {
      "description": "A type or an array of types that the document object represents. The first or only item should be 'CertificateDocument', and any others should each be an IRI (usually a URL) corresponding to a definition of the type itself. In almost all cases, there will be only one type: 'CertificateDocument'",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "Certificate": {
      "$ref": "http://www.blockcerts.org/schema/1.2/certificate-1.2.json"
    },
    "Assertion": {
      "$ref": "http://www.blockcerts.org/schema/1.2/assertion-1.2.json"
    },
    "VerificationObject": {
      "type": "object",
      "description": "V1.2 notice: the Blockchain Certificates VerificationObject will change in the next schema version to be consistent with OBI VerificationObjects. This work is in progress.",
      "properties": {
        "attribute-signed": {
          "type": "string",
          "description": "Name of the attribute in the json that is signed by the issuer's private key. Default is 'uid', referring to the uid attribute."
        },
        "type": {
          "type": "string",
          "enum": [
            "hosted",
            "signed",
            "ECDSA(secp256k1)"
          ],
          "description": "Name of the signing method. Default is 'ECDSA(secp256k1)', referring to the Blockchain Certificates method of signing messages with the issuer's private key."
        },
        "signer": {
          "type": "string",
          "format": "uri",
          "description": "URI where issuer's public key is presented. Default is https://[domain]/keys/[org-abbr]-certs-public-key.asc"
        }
      },
      "required": [
        "attribute-signed",
        "type",
        "signer"
      ]
    },
    "Recipient": {
      "type": "object",
      "properties": {
        "@type": {
          "$ref": "#/definitions/JsonLdType"
        },
        "familyName": {
          "type": "string",
          "description": "Family name of the recipient. http://schema.org/Person#familyName"
        },
        "identity": {
          "type": "string",
          "description": "String that represents a recipient's identity. By default, it is an email address."
        },
        "type": {
          "type": "string",
          "description": "Type of value in the identity field. Default is 'email'."
        },
        "hashed": {
          "type": "boolean",
          "description": "Describes if the value in the identity field is hashed or not. We strongly recommend that the issuer hash the identy to protect the recipient."
        },
        "salt": {
          "type": "string",
          "description": "per the OBI standard, if the recipient identity is hashed, then this should contain the string used to salt the hash"
        },
        "pubkey": {
          "type": "string",
          "description": "Bitcoin address (compressed public key, usually 24 characters) of the recipient."
        },
        "givenName": {
          "type": "string",
          "description": "Given name of the recipient. http://schema.org/Person#givenName"
        }
      },
      "required": [
        "@type",
        "familyName",
        "identity",
        "type",
        "hashed",
        "pubkey",
        "givenName"
      ],
      "additionalProperties": true
    }

  },
  "properties": {
    "@type": {
      "$ref": "#/definitions/JsonLdType"
    },
    "certificate": {
      "$ref": "#/definitions/Certificate"
    },
    "assertion": {
      "$ref": "#/definitions/Assertion"
    },
    "verify": {
      "$ref": "#/definitions/VerificationObject"
    },
    "recipient": {
      "$ref": "#/definitions/Recipient"
    }
  },
  "required": [
    "@type",
    "certificate",
    "assertion",
    "verify",
    "recipient"
  ],
  "additionalProperties": true
}
